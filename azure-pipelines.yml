# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'docker registy'
        repository: 'otmane1990/weatherapi'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tag)
- stage: plan
  displayName: terraform plan
  dependsOn: Build
  jobs:
  - job: plan_job 
    displayName: provision container instance 
    pool:
     vmImage: ubuntu-latest
    variables:
    - group: terraformspvars
    steps:
    - task: PowerShell@2
      displayName: terraform plan
      inputs:
        targetType: 'inline'
        script: |
          terraform init -input=false
          terraform plan -input=false
      env:
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)

- stage: apply
  displayName: terraform apply
  dependsOn: plan
  jobs:
  - deployment: apply_job 
    environment: prod
    displayName: provision container instance 
    pool:
     vmImage: ubuntu-latest
    variables:
    - group: terraformspvars
    strategy:
      runOnce:    #rolling, canary are the other strategies that are supported
        deploy:
          steps:
          - task: PowerShell@2
            displayName: terraform plan
            inputs:
              targetType: 'inline'
              script: |
                terraform apply -input=false -autoapprouve
            env:
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
            